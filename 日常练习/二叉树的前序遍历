/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */


/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
 typedef struct TreeNode TreeNode;
int qSize(TreeNode*root)
{
    return root==NULL?0:qSize(root->left)+qSize(root->right)+1;
}
TreeNode*preson(TreeNode*root,int*a,int*n)
{
    if(root==NULL)
        return NULL;
    a[(*n)++]=root->val;
    preson(root->left,a,n);
    preson(root->right,a,n);
    return NULL;
}
int* preorderTraversal(struct TreeNode* root, int* returnSize)
{
    int size=qSize(root);
    int*a=(int*)malloc(sizeof(int)*size);
    int n=0;
    preson(root,a,&n);
    *returnSize=size;
    return a;
}